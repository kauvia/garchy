library(garchR)
iexdata('GE')
library(garchR)
install.packages("garchR")
install.packages("garchR","usr/lib/R/site-library")
install.packages("garchR", "usr/lib/R/site-library")
install.packages("garchR", "usr/lib/R/site-library")
install.packages("garchR", "/usr/lib/R/site-library")
?garchR
iexdata()
library("ggplot2", lib.loc="/usr/lib/R/site-library")
library("rugarch", lib.loc="/usr/lib/R/site-library")
library("quadprog", lib.loc="/usr/lib/R/site-library")
library("quantmod", lib.loc="/usr/lib/R/site-library")
getSymbols("BA")
chartSeries(BA)
rIBM <- dailyReturn(BA)
View(rIBM)
rBA <- dailyReturn(BA)
gspec = ugarchspec()
gfit = ugarchfit(spec=gspec,data=rBA)
gfore <- ugarchforecast(gfit,n.ahead=10)
plot <- gfore
plot(gfore)
plot(gfore)
plot(gfore)
gfore <- ugarchforecast(gfit,n.ahead=1)
plot(gfore)
gfore <- ugarchforecast(gfit,n.ahead=2)
plot(gfore)
0
gfore <- ugarchforecast(gfit,n.ahead=2,n.roll=5)
gfore <- ugarchforecast(gfit,n.ahead=2,n.roll=5,n.ahead=10)
gfore <- ugarchforecast(gfit,n.ahead=2,n.roll=5,out.sample = 6)
gfore <- ugarchforecast(gfit,n.ahead=2,n.roll=5,out.sample = 7)
gfore <- ugarchforecast(gfit,n.ahead=5)
plot(gfore)
library("Sim.DiffProc", lib.loc="/usr/lib/R/site-library")
set.seed(1234)
X <- GBM(N=1000,M=50)
plot(X,plot.type='single')
View(X)
lines(as.vector(time(X)),rowMeans(X),col="red")
X <- GBM(N=1000,M=50,x0=100)
plot(X,plot.type='single')
lines(as.vector(time(X)),rowMeans(X),col="red")
X <- GBM(N=1000,M=50,x0=1000)
plot(X,plot.type='single')
lines(as.vector(time(X)),rowMeans(X),col="red")
gfore
View(gfit)
View(gspec)
View(gfit)
rX=dailyReturn(X)
Xdates <- seq(as.Date("2019-01-01"),length=1000,by="days")
X <- xts(x = X,order.by=Xdates)
Xdates <- seq(as.Date("2019-01-01"),length=1001,by="days")
X <- xts(x = X,order.by=Xdates)
View(X)
rX <- dailyReturn(X)
rX <- dailyReturn(X$X1)
rX <- periodReturn(X$X1)
X <- GBM(N=1,M=50,x0=1000)
X <- GBM(N=1000,M=1,x0=1000)
X <- xts(x = X,order.by=Xdates)
rX <- periodReturn(X)
rX <- dailyReturn(X$X1)
rX <- dailyReturn(X)
View(X)
View(BA)
View(X)
xts(X)
View(X)
X=xts(X)
rX <- dailyReturn(X)
View(rX)
gfitX=ugarchfit(spec=gspec,data=rX)
gforeX <- ugarchforecast(gfitX,n.ahead=100)
plot(gforeX)
gforeX <- ugarchforecast(gfitX,n.ahead=5)
plot(gforeX)
specX <- getspec(gfitX)
setfix
setfixed(specX)
setfixed(specX) <- as.list(coef(gfitX))
gforeX <- ugarchforecast(specX,n.ahead=1,n.roll=999,data=rX,out.sample = 999)
plot(gforeX)
plot(gforeX)
}
gbmgarch(5)
return (stock^stock);
return (stock)
gbmgarch <- function(stock){
answer <- stock*10
return(answer)
}
gbmgarch(5)
gbmgarch(5)
gbmgarch(5)
gbmgarch(5)
require(garchR)
gbmgarch("AAPL")
gbmgarch("AAPL")
gbmgarch(AAPL)
gbmgarch("AAPL")
gbmgarch("AAPL")
gbmg("AAPL")
gbmgarch("AAPL")
require(garchR)
gbmgarch("AAPL")
gbmgarch(5)
gbmgarch <- function(stock){
answer <- iexdata(stock)
return(answer)
}
gbmgarch("BA")
gbmgarch(5)
gbmgarch(5)
gbmgarch(5)
gbmgarch("BA")
gbmgarch <- function(stock){
answer <- iexdata(stock)
return(answer)
}
gbmgarch <- function(ticker){
stock <- iexdata(ticker)
return(stock)
}
View(gbmgarch)
gbmgarch("GE")
