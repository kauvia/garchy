rBA = returns(BA)
BAspec = ugarchspec()
BAfit = ugarchfit(spec=BAspec,data=rBA)
speccy=getspec(BAfit)
setfixed(speccy) <-as.list(coef(garchfit))
setfixed(speccy) <-as.list(coef(BAfit))
BAfore <- ugarchforecast(speccy,n.ahead=1,n.roll=length(rBA),data=rBA,out.sample = length(rBA))
BAfore <- ugarchforecast(speccy,n.ahead=1,n.roll=length(rBA)-1,data=rBA,out.sample = length(rBA)-1)
plot(BAfore)
library(garchR)
library(garchR)
GBM(N=1)
GBM(N=2)
?GBM
GBM(N=2,Dt=2)
GBM(N=2,Dt=1)
GBM(N=2,Dt=3)
GBM(N=2,Dt=5)
GBM(N=2,Dt=1)
GBM(N=2,Dt=.5)
GBM(N=2,t0=1,T=2)
library(garchR)
BA <- gbmgarch(BAdataset)
plot(BA)
View(BA)
BA[1]
BA[,1]
BA[,2]=BA[,1]
View(BA)
BA[,2]<-BA[,1]
BA$2<-BA[,1]
BA$newCol<-BA[,1]
View(BA)
a <- 1:5
for (i in seq_along(a)){BA$i <- BA[,1]}
View(BA)
for (i in seq_along(a)){BA$++ <- BA[,1]}
for (i in a){BA[,i] <- BA[,1]}
for (i in a){BA[,a] <- BA[,1]}
for (i in a){BA[,a] <- NA}
for (i in a){BA[,as.character(a)] <- NA}
for (i in a){BA[,as.character(i)] <- NA}
for (i in a){BA[,as.character(i)] <- BA[,1]}
for (i in a){BA[,as.character(a[i])] <- BA[,1]}
for (i in a){tmp <- as.character(a);print(tmp)}
for (i in a){tmp <- as.character(a[i]);print(tmp)}
for (i in a){tmp <- as.character(a[i]);BA[,tmp]<-BA[,1]}
BA[,5]<-BA[,1]
BA[,as.character(5)]<-BA[,1]
BA[as.character(5)]<-BA[,1]
View(BA)
View(BAfit)
View(BA)
BA[5]<-BA[,1]
BA[,5]<-BA[,1]
View(BA)
BA[,"hello"]<-BA[,1]
BA["hello"]<-BA[,1]
View(BA)
View(BA)
BA["hello"]<-BA[,2]
BA[,2]
BA[,"hello"]<-BA[,2]
BA[,hello]<-BA[,2]
BA[,"hello"]=-BA[,2]
BA[,"hello"]=BA[,2]
BA["hello"]=BA[,2]
BA[,"hello"]=BA[,2]
library(garchR)
BA<-gbmgarch("BA")
BA<-gbmgarch(BAdataset)
View(BA)
library(garchR)
BA<-gbmgarch(BAdataset)
View(BA)
as.xts(gbm)
as.xts(BA)
str(as.xts(BA))
str(as.xts(BA))
View(BA)
BAxts <- as.xts(BA)
BAxts <- xts(BA)
BAxts <- xts(BA,order.by = [,1])
BAxts <- xts(BA,order.by = BA[,1])
BAxts <- xts(BA,order.by = BA[,1], frequency = "daily")
BAxts <- xts(BA, frequency = "daily")
BA$Time <-seq(as.Date('2019-01-16'))
BA$Time <-seq(as.Date('2019-01-16'),by='days')
BA$Time <-seq(as.Date('2019-01-16'),by='days',along.with = BA)
View(BA)
BA<-gbmgarch(BAdataset)
View(BA)
BA$Time <-seq(from =as.Date("2017-01-01"),to=as.Date("2017-01-03"),by='day')
View(BA)
BA<-gbmgarch(BAdataset)
values <- seq(from =as.Date("2017-01-01"),to=as.Date("2017-01-03"),by='day')
values
merge(BA,values)
View(BA)
BA<-merge(BA,values)
View(BA)
end(BAdataset.DE)
end(BAdataset)
View(BA)
View(BA)
View(BAdataset)
View(BA)
View(BAdataset)
View(BA)
values <- seq(from =end(BAdataset),to=end(BAdataset)+1,by='day')
merge?
library(garchR)
BA = gbmgarch(BAdataset)
View(BA)
View(BA)
library(garchR)
BA = gbmgarch(BAdataset)
View(BA)
library(garchR)
gbmgarch(BAdataset)
library(garchR)
BA = gbmgarch(BAdataset)
View(BA)
gbmDates <- seq(from=end(BAdataset),to=end(BAdataset)+1,by='day')
merge(BA,gbmDates)
merge(BA,gbmDates,all.BA=false)
merge(BA,gbmDates,all=FALSE)
gbmDates <- seq(from=end(BAdataset),to=end(BAdataset)+2,by='day')
merge(BA,gbmDates)
gbmDates <- seq(from=end(BAdataset),to=end(BAdataset)+1,by='day')
merge(BA,gbmDates)
gbmDates <- seq(from=end(BAdataset)+1,to=end(BAdataset)+1,by='day')
merge(BA,gbmDates)
BA[2]
merge(BA[2],gbmDates)
library(garchR)
BA = gbmgarch(BAdataset)
View(BA)
to.xts(BA)
as.xts(BA)
as.xts(BA[,2],BA[,2])
test <-as.xts(BA[,2],BA[,2])
View(test)
test <-BA(as.xts(BA[,2],BA[,2]))
test =as.xts(BA[,2],BA[,2])
View(test)
test <-as.xts(BA[,2],BA[,2])
View(BA)
test <-as.xts(BA[,1],BA[,2])
View(test)
library(garchR)
BA <- gbmgarch(BAdataset)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
BA[2]
BA[,2]
BA[2,]
BA[1,]
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
BA <- BA[2,]
BA
merge(BA,gbmDates)
merge(gbmDates,BA)
BA <- gbmgarch(BAdataset)
merge(BA,gbmDates)
BA <- merge(BA.gbmDates)
BA <- merge(BA,gbmDates)
View(BA)
BA <- BA(2,)
BA <- BA[2,]
View(BA)
as.xts(BA)
as.xts(BA[,1],BA[,11])
as.xts(BA[,11])
as.xts(BA[1,],BA[,11])
test <- as.xts(BA[1,],BA[,11])
View(test)
as.xts(BA)
as.xts(BA,BA[,11])
as_xts()
library("tibble", lib.loc="/usr/lib/R/site-library")
detach("package:tibble", unload=TRUE)
library("timetk", lib.loc="/usr/lib/R/site-library")
tk_xts(BA)
View(BA)
BA <- tk_xts(BA)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
BA <- tk_xts(BA)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
View(BA)
names[BA]
names(BA)
View(BAdataset)
for (i in a){print(i)}
View(BA)
for (i in a){BA[[paste(i)]] <- BA[X1]}
for (i in a){BA[[paste(i)]] <- BA$X1}
View(BA)
BA <- gbmgarch(BAdataset)
for (i in a){BA[[paste(i)]] =BA$X1}
BA <- gbmgarch(BAdataset)
for (i in a){BA[[paste(i)]] <-BA$X1}
View(BA)
BA <- gbmgarch(BAdataset)
for (i in a){BA[[paste(i)]] <-NULL}
View(BA)
for (i in a){BA[[paste(i)]] <- 5}
View(BA)
BA <- gbmgarch(BAdataset)
View(BA)
for (i in names(BA)){print(i)}
for (i in names(BA)){print(BA[i])}
for (i in names(BA)){print(BA[[i]])}
for (i in names(BA)){print(BA[paste(i)])}
for (i in names(BA)){print(BA[[print(i)]])}
for (i in names(BA)){print(BA[[paste(i)]])}
for (i in names(BA)){print(BA[[paste(i,sep="_")]])}
for (i in names(BA)){print(BA[[paste(i,'test',sep="_")]])}
for (i in names(BA)){print(BA[[i]])}
i <- X1
i <- "X1"
BA[[i]]
BA$X1
BA[[i]]
library(garchR)
BA <-gbmgarch(BA)
BA <-gbmgarch(BAdataset)
View(BA)
View(BA)
testSet <- BAdataset
testSet <- merge(testSet,BA)
View(testSet)
testSet$X1 <- BA$Open
testSet$X2 <- testSet$BA.Open
i = "X3"
testSet[[i]]
testSet$[[i]]
testSet[,1]
testSet[,5]
testSet[,i]
View(test)
View(testSet)
testSet[,[[i]]]
testSet[,[[2]]]
testSet[,i]
i<-1
testSet[,i]
BA[,1]
BA[,2]
BA[1,]
View(test)
View(BA)
View(BAdataset)
test<-BAdataset
test<-BAdataset[i]
View(test)
test<-BAdataset[i]
test<-BAdataset[i,]
View(test)
test<-BAdataset[1,]
View(testSet)
View(test)
BAdataset[i,]
BAdataset[1,]
BAdataset[,1]
test<-BAdataset[,1]
View(test)
colnames(test)
colnames(test) <- c('X1')
View(test)
test1<-merge(test,BA)
View(test1)
test<-BAdataset[,1]
View(test)
test1<-merge(test,BA)
View(test1)
for (i in col(BA)){print(i)}
for (i in col(test1)){print(i)}
col(test1)
colnames(test1)
for (i in colnames(test1)){print(i)}
for (i in colnames(test1)){if (i !="BA.Open"){print(i)}}
View(BA)
BA <- gbmgarch(BA)
BA <- gbmgarch(BAdataset)
View(BA)
View(BA)
rbind(BA,values)
cbind(BA,values)
library(garchR)
BA <- gbmgarch(BA)
BA <- gbmgarch(BAdataset)
View(BA)
values <- seq(from=end(returns)+1,to=end(returns)+11,by='day')
values <- seq(from=end(returns)+1,to=end(returns)+11,by='day')
values <- seq(from=end(BAdataset)+1,to=end(BAdataset)+11,by='day')
test1 <- merge(BA,values)
View(test1)
View(test1)
View(test1)
test1 <- BA
View(test1)
test1$Date <- NA
View(test1)
View(test1)
test1 <- BA
View(test1)
Dates = data.frame(a=1:4,c=5)
View(Dates)
Dates = data.frame(a=1:4)
View(Dates)
Dates = data.frame(a=seq(from=end(BAdataset)+1,to=end(BAdataset)+1,by='day'))
View(Dates)
Dates = data.frame(a=seq(from=end(BAdataset),to=end(BAdataset)+11,by='day'))
Dates = data.frame(a=seq(from=end(BAdataset),to=end(BAdataset)+10,by='day'))
View(Dates)
View(BA)
Dates = data.frame(a=seq(from=end(BAdataset),to=end(BAdataset)+2,by='day'))
View(BA)
View(Dates)
View(BA)
test1 <- cbind(BA,Dates)
View(test1)
test1 <- rbind(BA,Dates)
test1 <- BA
test1
View(test)
View(test1)
test1$dates = Dates
test1 <- BA
View(test1)
merge(test1,Dates)
test1<-merge(test1,Dates)
View(test)
View(test1)
View(BA)
View(Dates)
View(BAfit)
View(BA)
Dates$X1=BA$X1
Dates$X1<-BA$X1
BA$X1
View(BA)
BA[X1]
BA['X1']
View(BA)
BA$1
BA$"X1"
as.ts(Dates)
View(Dates)
Dates1 <- as.ts(Dates)
Dates1 <- as.ts(data=Dates, deltat=1/365)
Dates1 <- as.ts(Dates, deltat=1/365)
Dates1
merge(Dates1,BA)
library(garchR)
BA <- gbmgarch(BA)
BA <- gbmgarch(BAdataset)
View(BAdataset)
BA
as.xts(BA)
as.xts(BA,order.by=values)
as.xts(BA, dateFormat = "%y/%m/%d")
as.xts(BA, dateFormat = )
as.xts(BA, dateFormat = %D)
as.xts(BA, dateFormat = "%D")
plot(BA)
plot(BAdataset)
lines(BA)
plot(BAdataset)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
library(garchR)
BA <- gbmgarch(BAdataset)
for (i in gbm){print(i)}
for (i in BA){print(i)}
BA<-BA[-1,]
BA
library(garchR)
BA <- gbmgarch(BAdataset)
View(BAdataset)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
plot(BA)
plot.xts(BA)
plot.xts(BA)
plot.xts(tail(BA))
plot.xts(tail(BA,365))
BA
View(BA)
test1 <-BA
View(test1)
test1 <-r(BA)
test1 <- r(BA)
test1 <- c(BA)
View(test1)
test1 <-BA
View(test1)
BA <- gbmgarch(BAdataset)
test2<-BA
plot(test2)
plot(test1)
plot(test1)
lines(test2)
plot(tail(test1),100)
plot(tail(test1,100))
lines(tail(test2,100))
test3 = merge(test1,test2)
View(test3)
plot(tail(test3,100))
library(garchR)
BA <- gbmgarch(BAdataset)
library(garchR)
BA <- gbmgarch(BAdataset)
library(garchR)
BA <- gbmgarch(BAdataset)
library(garchR)
BA <- gbmgarch(BAdataset)
plot(tail(BA,100))
lines(tail(BA,100))
View(test3)
test4 <- merge(test1,test2)
View(test4)
library(garchR)
BA <- gbmgarch(BAdataset)
View(BA)
plot(tail(BA,100))
library(garchR)
BA <- gbmgarch(BAdataset)
plot(tail(BA,100))
library(garchR)
BA <- gbmgarch(BAdataset)
plot(tail(BA,100))
View(BA)
mean(BA)
BA$mean = BA$BA.Open
View(BA)
BA[,1]
BA[,2]
BA[,3]
BA[1,]
BA[2,]
length(BA)
View(BA)
row(BA)
row.names(BA)
rowMeans(BA)
BA$mean = rowMeans(BA)
BA$mean
plot(BA$mean)
plot(tail(BA$mean,100))
plot(tail(BA,100))
plot(tail(BA$mean,100))
plot(tail(BA,100))
library(garchR)
BA<-gbmgarch(BAdataset)
plot(tail(BA$mean,100))
plot(tail(BA,100))
plot(tail(BA,200))
BA$mean = rowMeans(BA)
plot(tail(BA$mean,200))
plot(tail(BA$mean,200))
plot(tail(BA,200))
BA<-gbmgarch(BAdataset)
BA$mean = rowMeans(BA)
plot(tail(BA$mean,200))
library(garchR)
BA<-gbmgarch(BAdataset)
BA$mean = rowMeans(BA)
plot(tail(BA,200))
plot(tail(BA$mean,200))
plot(tail(BA$mean,1000))
plot(tail(BA,1000))
library(garchR)
gbmgarch(BAdataset)
library(garchR)
gbmgarch(BAdataset)
library(garchR)
gbmgarch(BAdataset)
library(garchR)
gbmgarch(BAdataset)
library(garchR)
install.packages("~/prog/wdi/garchy/R/garchR_0.1.0.tar.gz", repos = NULL, type = "source", lib="/usr/lib/R/site-library")
